[{"/Users/yuitora./fruitai_website/src/index.js":"1","/Users/yuitora./fruitai_website/src/App.js":"2","/Users/yuitora./fruitai_website/src/reportWebVitals.js":"3","/Users/yuitora./fruitai_website/src/ImagePreview/index.js":"4"},{"size":535,"mtime":1668588203756,"results":"5","hashOfConfig":"6"},{"size":1465,"mtime":1668588203758,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1668588203753,"results":"8","hashOfConfig":"6"},{"size":528,"mtime":1668588203754,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5x9kh5",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/yuitora./fruitai_website/src/index.js",[],[],"/Users/yuitora./fruitai_website/src/App.js",["24","25","26"],[],"import React, { useState } from 'react';\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport ImagePreview from './ImagePreview';\n\n\n\nfunction App (props) {\n  const [dataUri, setDataUri] = useState('');\n\n  var sendBase64ToServer = function(base64){\n    var httpPost = new XMLHttpRequest(),\n        path = \"http://138.195.242.46:8888/send/\",\n        data = JSON.stringify({image: base64});\n    httpPost.onreadystatechange = function(err) {\n      console.log(\"sent\")\n      if (httpPost.readyState == 4 && httpPost.status == 200) {\n        setDataUri(httpPost.response);\n      } else {\n        console.log(err);\n      }\n    };\n    console.log(\"enterd\");\n    // httpPost.setHeader('Content-Type', 'application/json');\n    httpPost.open(\"POST\", path, true);\n    console.log('zzzz');\n    httpPost.send(data);\n  };\n\n  async function handleTakePhoto (dataUri) {\n    console.log(\"hello\")\n    sendBase64ToServer(dataUri)\n\n  }\n\n  const isFullscreen = false;\n  return (\n      <div>\n        {\n          (dataUri)\n              ? <ImagePreview dataUri={dataUri}\n                              isFullscreen={isFullscreen}\n              />\n              : <Camera onTakePhotoAnimationDone = {handleTakePhoto}\n                        isFullscreen={isFullscreen}\n                        idealFacingMode={FACING_MODES.ENVIRONMENT}\n              />\n        }\n      </div>\n  );\n}\n\nexport default App;\n","/Users/yuitora./fruitai_website/src/reportWebVitals.js",[],[],"/Users/yuitora./fruitai_website/src/ImagePreview/index.js",["27"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles/imagePreview.css';\n\nexport const ImagePreview = ({ dataUri, isFullscreen }) => {\n    let classNameFullscreen = isFullscreen ? 'ImagePreview-image-preview-fullscreen' : '';\n\n    return (\n        <div className={'ImagePreview-image-preview ' + classNameFullscreen}>\n            <img src={dataUri} />\n        </div>\n    );\n};\n\nImagePreview.propTypes = {\n    dataUri: PropTypes.string,\n    isFullscreen: PropTypes.bool\n};\n\nexport default ImagePreview;",{"ruleId":"28","severity":1,"message":"29","line":2,"column":32,"nodeType":"30","messageId":"31","endLine":2,"endColumn":43},{"ruleId":"32","severity":1,"message":"33","line":17,"column":31,"nodeType":"34","messageId":"35","endLine":17,"endColumn":33},{"ruleId":"32","severity":1,"message":"33","line":17,"column":55,"nodeType":"34","messageId":"35","endLine":17,"endColumn":57},{"ruleId":"36","severity":1,"message":"37","line":11,"column":13,"nodeType":"38","endLine":11,"endColumn":34},"no-unused-vars","'IMAGE_TYPES' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]